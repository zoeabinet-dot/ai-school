name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend deps
        working-directory: ./frontend
        run: npm ci

      - name: Type-check frontend
        working-directory: ./frontend
        run: npm run type-check

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint

      - name: Test frontend
        working-directory: ./frontend
        run: npm test -- --watchAll=false --passWithNoTests

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build --if-present

      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

  backend:
    name: Backend checks & tests
    runs-on: ubuntu-latest
    needs: frontend
    env:
      DJANGO_SETTINGS_MODULE: ai_school_management.settings
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-prod.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend prod requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-prod.txt

      - name: Install test deps
        run: |
          pip install pytest pytest-django

      - name: Run Django checks
        run: |
          python manage.py migrate --noinput
          python manage.py check --deploy

      - name: Run tests
        run: |
          pytest -q || true
