{"ast":null,"code":"// User and Authentication Types\nexport let UserRole=/*#__PURE__*/function(UserRole){UserRole[\"STUDENT\"]=\"student\";UserRole[\"FAMILY\"]=\"family\";UserRole[\"STAFF\"]=\"staff\";UserRole[\"ADMIN\"]=\"admin\";UserRole[\"AI_TEACHER\"]=\"ai_teacher\";return UserRole;}({});export let Gender=/*#__PURE__*/function(Gender){Gender[\"MALE\"]=\"male\";Gender[\"FEMALE\"]=\"female\";Gender[\"OTHER\"]=\"other\";Gender[\"PREFER_NOT_TO_SAY\"]=\"prefer_not_to_say\";return Gender;}({});export let Permission=/*#__PURE__*/function(Permission){Permission[\"VIEW_STUDENTS\"]=\"view_students\";Permission[\"EDIT_STUDENTS\"]=\"edit_students\";Permission[\"DELETE_STUDENTS\"]=\"delete_students\";Permission[\"VIEW_ANALYTICS\"]=\"view_analytics\";Permission[\"EDIT_ANALYTICS\"]=\"edit_analytics\";Permission[\"VIEW_MONITORING\"]=\"view_monitoring\";Permission[\"EDIT_MONITORING\"]=\"edit_monitoring\";Permission[\"VIEW_FAMILIES\"]=\"view_families\";Permission[\"EDIT_FAMILIES\"]=\"edit_families\";Permission[\"VIEW_STAFF\"]=\"view_staff\";Permission[\"EDIT_STAFF\"]=\"edit_staff\";Permission[\"VIEW_LESSONS\"]=\"view_lessons\";Permission[\"EDIT_LESSONS\"]=\"edit_lessons\";Permission[\"VIEW_AI_LESSONS\"]=\"view_ai_lessons\";Permission[\"EDIT_AI_LESSONS\"]=\"edit_ai_lessons\";Permission[\"ADMIN_ACCESS\"]=\"admin_access\";return Permission;}({});export let ProfileVisibility=/*#__PURE__*/function(ProfileVisibility){ProfileVisibility[\"PUBLIC\"]=\"public\";ProfileVisibility[\"PRIVATE\"]=\"private\";ProfileVisibility[\"FRIENDS_ONLY\"]=\"friends_only\";return ProfileVisibility;}({});export let AcademicRecordVisibility=/*#__PURE__*/function(AcademicRecordVisibility){AcademicRecordVisibility[\"PUBLIC\"]=\"public\";AcademicRecordVisibility[\"PRIVATE\"]=\"private\";AcademicRecordVisibility[\"FAMILY_ONLY\"]=\"family_only\";AcademicRecordVisibility[\"STAFF_ONLY\"]=\"staff_only\";return AcademicRecordVisibility;}({});export let ColorBlindnessType=/*#__PURE__*/function(ColorBlindnessType){ColorBlindnessType[\"NONE\"]=\"none\";ColorBlindnessType[\"PROTANOPIA\"]=\"protanopia\";ColorBlindnessType[\"DEUTERANOPIA\"]=\"deuteranopia\";ColorBlindnessType[\"TRITANOPIA\"]=\"tritanopia\";return ColorBlindnessType;}({});export let ThemePreference=/*#__PURE__*/function(ThemePreference){ThemePreference[\"LIGHT\"]=\"light\";ThemePreference[\"DARK\"]=\"dark\";ThemePreference[\"SYSTEM\"]=\"system\";return ThemePreference;}({});// Authentication Types\n// Student Types\nexport let AcademicStatus=/*#__PURE__*/function(AcademicStatus){AcademicStatus[\"ACTIVE\"]=\"active\";AcademicStatus[\"INACTIVE\"]=\"inactive\";AcademicStatus[\"GRADUATED\"]=\"graduated\";AcademicStatus[\"SUSPENDED\"]=\"suspended\";AcademicStatus[\"TRANSFERRED\"]=\"transferred\";return AcademicStatus;}({});export let ProjectType=/*#__PURE__*/function(ProjectType){ProjectType[\"RESEARCH\"]=\"research\";ProjectType[\"PRESENTATION\"]=\"presentation\";ProjectType[\"EXPERIMENT\"]=\"experiment\";ProjectType[\"CREATIVE\"]=\"creative\";ProjectType[\"TECHNICAL\"]=\"technical\";return ProjectType;}({});export let ProjectStatus=/*#__PURE__*/function(ProjectStatus){ProjectStatus[\"NOT_STARTED\"]=\"not_started\";ProjectStatus[\"IN_PROGRESS\"]=\"in_progress\";ProjectStatus[\"COMPLETED\"]=\"completed\";ProjectStatus[\"OVERDUE\"]=\"overdue\";return ProjectStatus;}({});export let SessionType=/*#__PURE__*/function(SessionType){SessionType[\"AI_LESSON\"]=\"ai_lesson\";SessionType[\"TRADITIONAL\"]=\"traditional\";SessionType[\"GROUP\"]=\"group\";SessionType[\"INDIVIDUAL\"]=\"individual\";SessionType[\"ASSESSMENT\"]=\"assessment\";return SessionType;}({});export let EngagementLevel=/*#__PURE__*/function(EngagementLevel){EngagementLevel[\"LOW\"]=\"low\";EngagementLevel[\"MEDIUM\"]=\"medium\";EngagementLevel[\"HIGH\"]=\"high\";EngagementLevel[\"EXCELLENT\"]=\"excellent\";return EngagementLevel;}({});export let GoalType=/*#__PURE__*/function(GoalType){GoalType[\"ACADEMIC\"]=\"academic\";GoalType[\"BEHAVIORAL\"]=\"behavioral\";GoalType[\"SOCIAL\"]=\"social\";GoalType[\"PERSONAL\"]=\"personal\";return GoalType;}({});export let GoalStatus=/*#__PURE__*/function(GoalStatus){GoalStatus[\"NOT_STARTED\"]=\"not_started\";GoalStatus[\"IN_PROGRESS\"]=\"in_progress\";GoalStatus[\"COMPLETED\"]=\"completed\";GoalStatus[\"OVERDUE\"]=\"overdue\";return GoalStatus;}({});// AI Teacher Types\nexport let DifficultyLevel=/*#__PURE__*/function(DifficultyLevel){DifficultyLevel[\"BEGINNER\"]=\"beginner\";DifficultyLevel[\"INTERMEDIATE\"]=\"intermediate\";DifficultyLevel[\"ADVANCED\"]=\"advanced\";DifficultyLevel[\"EXPERT\"]=\"expert\";return DifficultyLevel;}({});export let ConversationStatus=/*#__PURE__*/function(ConversationStatus){ConversationStatus[\"ACTIVE\"]=\"active\";ConversationStatus[\"PAUSED\"]=\"paused\";ConversationStatus[\"COMPLETED\"]=\"completed\";ConversationStatus[\"ARCHIVED\"]=\"archived\";return ConversationStatus;}({});export let SenderType=/*#__PURE__*/function(SenderType){SenderType[\"STUDENT\"]=\"student\";SenderType[\"AI_TEACHER\"]=\"ai_teacher\";SenderType[\"HUMAN_TEACHER\"]=\"human_teacher\";return SenderType;}({});export let MessageType=/*#__PURE__*/function(MessageType){MessageType[\"TEXT\"]=\"text\";MessageType[\"AUDIO\"]=\"audio\";MessageType[\"IMAGE\"]=\"image\";MessageType[\"VIDEO\"]=\"video\";MessageType[\"FILE\"]=\"file\";return MessageType;}({});// Analytics Types\nexport let AssessmentType=/*#__PURE__*/function(AssessmentType){AssessmentType[\"QUIZ\"]=\"quiz\";AssessmentType[\"TEST\"]=\"test\";AssessmentType[\"EXAM\"]=\"exam\";AssessmentType[\"PROJECT\"]=\"project\";AssessmentType[\"PRESENTATION\"]=\"presentation\";AssessmentType[\"ASSIGNMENT\"]=\"assignment\";return AssessmentType;}({});// Monitoring Types\nexport let SessionStatus=/*#__PURE__*/function(SessionStatus){SessionStatus[\"ACTIVE\"]=\"active\";SessionStatus[\"PAUSED\"]=\"paused\";SessionStatus[\"COMPLETED\"]=\"completed\";SessionStatus[\"ERROR\"]=\"error\";return SessionStatus;}({});export let BehaviorEventType=/*#__PURE__*/function(BehaviorEventType){BehaviorEventType[\"ATTENTION_LOSS\"]=\"attention_loss\";BehaviorEventType[\"DISTRACTION\"]=\"distraction\";BehaviorEventType[\"FRUSTRATION\"]=\"frustration\";BehaviorEventType[\"ENGAGEMENT\"]=\"engagement\";BehaviorEventType[\"SLEEPINESS\"]=\"sleepiness\";BehaviorEventType[\"STRESS\"]=\"stress\";return BehaviorEventType;}({});export let AlertSeverity=/*#__PURE__*/function(AlertSeverity){AlertSeverity[\"LOW\"]=\"low\";AlertSeverity[\"MEDIUM\"]=\"medium\";AlertSeverity[\"HIGH\"]=\"high\";AlertSeverity[\"CRITICAL\"]=\"critical\";return AlertSeverity;}({});// Family Types\n// Staff Types\nexport let AssignmentType=/*#__PURE__*/function(AssignmentType){AssignmentType[\"TEACHING\"]=\"teaching\";AssignmentType[\"ADMINISTRATION\"]=\"administration\";AssignmentType[\"COUNSELING\"]=\"counseling\";AssignmentType[\"SUPPORT\"]=\"support\";return AssignmentType;}({});export let AssignmentStatus=/*#__PURE__*/function(AssignmentStatus){AssignmentStatus[\"ACTIVE\"]=\"active\";AssignmentStatus[\"INACTIVE\"]=\"inactive\";AssignmentStatus[\"PENDING\"]=\"pending\";AssignmentStatus[\"COMPLETED\"]=\"completed\";return AssignmentStatus;}({});// Lesson Types\nexport let MaterialType=/*#__PURE__*/function(MaterialType){MaterialType[\"DOCUMENT\"]=\"document\";MaterialType[\"VIDEO\"]=\"video\";MaterialType[\"AUDIO\"]=\"audio\";MaterialType[\"IMAGE\"]=\"image\";MaterialType[\"INTERACTIVE\"]=\"interactive\";return MaterialType;}({});export let QuestionType=/*#__PURE__*/function(QuestionType){QuestionType[\"MULTIPLE_CHOICE\"]=\"multiple_choice\";QuestionType[\"TRUE_FALSE\"]=\"true_false\";QuestionType[\"SHORT_ANSWER\"]=\"short_answer\";QuestionType[\"ESSAY\"]=\"essay\";QuestionType[\"MATCHING\"]=\"matching\";return QuestionType;}({});// API Response Types\n// Dashboard Types\nexport let ActivityType=/*#__PURE__*/function(ActivityType){ActivityType[\"LOGIN\"]=\"login\";ActivityType[\"LESSON_COMPLETED\"]=\"lesson_completed\";ActivityType[\"ASSESSMENT_TAKEN\"]=\"assessment_taken\";ActivityType[\"PROJECT_SUBMITTED\"]=\"project_submitted\";ActivityType[\"GOAL_ACHIEVED\"]=\"goal_achieved\";ActivityType[\"BEHAVIOR_ALERT\"]=\"behavior_alert\";return ActivityType;}({});export let NotificationType=/*#__PURE__*/function(NotificationType){NotificationType[\"INFO\"]=\"info\";NotificationType[\"SUCCESS\"]=\"success\";NotificationType[\"WARNING\"]=\"warning\";NotificationType[\"ERROR\"]=\"error\";NotificationType[\"ALERT\"]=\"alert\";return NotificationType;}({});export let EventType=/*#__PURE__*/function(EventType){EventType[\"CLASS\"]=\"class\";EventType[\"MEETING\"]=\"meeting\";EventType[\"EXAM\"]=\"exam\";EventType[\"HOLIDAY\"]=\"holiday\";EventType[\"ACTIVITY\"]=\"activity\";return EventType;}({});// Real-time Communication Types\n// AI/ML Types\nexport let ModelType=/*#__PURE__*/function(ModelType){ModelType[\"PERFORMANCE_PREDICTION\"]=\"performance_prediction\";ModelType[\"EMOTION_RECOGNITION\"]=\"emotion_recognition\";ModelType[\"CONTENT_GENERATION\"]=\"content_generation\";ModelType[\"RISK_ASSESSMENT\"]=\"risk_assessment\";ModelType[\"ADAPTIVE_LEARNING\"]=\"adaptive_learning\";return ModelType;}({});export let ModelStatus=/*#__PURE__*/function(ModelStatus){ModelStatus[\"TRAINING\"]=\"training\";ModelStatus[\"ACTIVE\"]=\"active\";ModelStatus[\"INACTIVE\"]=\"inactive\";ModelStatus[\"ERROR\"]=\"error\";return ModelStatus;}({});// Error Types\n// Form Types\n// UI Types\n// WebSocket Types","map":{"version":3,"names":["UserRole","Gender","Permission","ProfileVisibility","AcademicRecordVisibility","ColorBlindnessType","ThemePreference","AcademicStatus","ProjectType","ProjectStatus","SessionType","EngagementLevel","GoalType","GoalStatus","DifficultyLevel","ConversationStatus","SenderType","MessageType","AssessmentType","SessionStatus","BehaviorEventType","AlertSeverity","AssignmentType","AssignmentStatus","MaterialType","QuestionType","ActivityType","NotificationType","EventType","ModelType","ModelStatus"],"sources":["/workspaces/ai-school/frontend/src/types/index.ts"],"sourcesContent":["// User and Authentication Types\nexport interface User {\n  id: number;\n  email: string;\n  first_name: string;\n  last_name: string;\n  role: UserRole;\n  is_active: boolean;\n  date_joined: string;\n  last_login: string;\n  profile_image?: string;\n  phone_number?: string;\n  date_of_birth?: string;\n  gender?: Gender;\n  address?: Address;\n  preferences?: UserPreferences;\n  permissions: Permission[];\n  metadata?: Record<string, any>;\n}\n\nexport enum UserRole {\n  STUDENT = 'student',\n  FAMILY = 'family',\n  STAFF = 'staff',\n  ADMIN = 'admin',\n  AI_TEACHER = 'ai_teacher'\n}\n\nexport enum Gender {\n  MALE = 'male',\n  FEMALE = 'female',\n  OTHER = 'other',\n  PREFER_NOT_TO_SAY = 'prefer_not_to_say'\n}\n\nexport enum Permission {\n  VIEW_STUDENTS = 'view_students',\n  EDIT_STUDENTS = 'edit_students',\n  DELETE_STUDENTS = 'delete_students',\n  VIEW_ANALYTICS = 'view_analytics',\n  EDIT_ANALYTICS = 'edit_analytics',\n  VIEW_MONITORING = 'view_monitoring',\n  EDIT_MONITORING = 'edit_monitoring',\n  VIEW_FAMILIES = 'view_families',\n  EDIT_FAMILIES = 'edit_families',\n  VIEW_STAFF = 'view_staff',\n  EDIT_STAFF = 'edit_staff',\n  VIEW_LESSONS = 'view_lessons',\n  EDIT_LESSONS = 'edit_lessons',\n  VIEW_AI_LESSONS = 'view_ai_lessons',\n  EDIT_AI_LESSONS = 'edit_ai_lessons',\n  ADMIN_ACCESS = 'admin_access'\n}\n\nexport interface Address {\n  street: string;\n  city: string;\n  state: string;\n  postal_code: string;\n  country: string;\n  coordinates?: Coordinates;\n}\n\nexport interface Coordinates {\n  latitude: number;\n  longitude: number;\n}\n\nexport interface UserPreferences {\n  notifications: NotificationPreferences;\n  privacy: PrivacyPreferences;\n  accessibility: AccessibilityPreferences;\n  theme: ThemePreference;\n  language: string;\n  timezone: string;\n}\n\nexport interface NotificationPreferences {\n  email: boolean;\n  push: boolean;\n  sms: boolean;\n  academic_updates: boolean;\n  behavioral_alerts: boolean;\n  general_announcements: boolean;\n}\n\nexport interface PrivacyPreferences {\n  profile_visibility: ProfileVisibility;\n  academic_record_visibility: AcademicRecordVisibility;\n  data_sharing: DataSharingPreferences;\n}\n\nexport enum ProfileVisibility {\n  PUBLIC = 'public',\n  PRIVATE = 'private',\n  FRIENDS_ONLY = 'friends_only'\n}\n\nexport enum AcademicRecordVisibility {\n  PUBLIC = 'public',\n  PRIVATE = 'private',\n  FAMILY_ONLY = 'family_only',\n  STAFF_ONLY = 'staff_only'\n}\n\nexport interface DataSharingPreferences {\n  analytics: boolean;\n  research: boolean;\n  third_party: boolean;\n  ai_training: boolean;\n}\n\nexport interface AccessibilityPreferences {\n  color_blindness: ColorBlindnessType;\n  font_size: 'small' | 'medium' | 'large';\n  high_contrast: boolean;\n  screen_reader: boolean;\n}\n\nexport enum ColorBlindnessType {\n  NONE = 'none',\n  PROTANOPIA = 'protanopia',\n  DEUTERANOPIA = 'deuteranopia',\n  TRITANOPIA = 'tritanopia'\n}\n\nexport enum ThemePreference {\n  LIGHT = 'light',\n  DARK = 'dark',\n  SYSTEM = 'system'\n}\n\n// Authentication Types\nexport interface AuthState {\n  user: User | null;\n  token: string | null;\n  refreshToken: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n  role: UserRole;\n}\n\nexport interface RegisterData {\n  email: string;\n  password: string;\n  first_name: string;\n  last_name: string;\n  role: UserRole;\n  phone_number?: string;\n  date_of_birth?: string;\n  gender?: Gender;\n}\n\nexport interface AuthResponse {\n  user: User;\n  access: string;\n  refresh: string;\n}\n\n// Student Types\nexport interface Student {\n  id: number;\n  user: User;\n  student_id: string;\n  grade_level: number;\n  enrollment_date: string;\n  graduation_date?: string;\n  academic_status: AcademicStatus;\n  learning_style: LearningStyle;\n  special_needs?: string[];\n  emergency_contact: EmergencyContact;\n  academic_records: AcademicRecord[];\n  projects: StudentProject[];\n  learning_sessions: LearningSession[];\n  goals: StudentGoal[];\n}\n\nexport enum AcademicStatus {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  GRADUATED = 'graduated',\n  SUSPENDED = 'suspended',\n  TRANSFERRED = 'transferred'\n}\n\nexport interface LearningStyle {\n  visual: number;\n  auditory: number;\n  kinesthetic: number;\n  reading: number;\n  social: number;\n}\n\nexport interface EmergencyContact {\n  name: string;\n  relationship: string;\n  phone: string;\n  email: string;\n  address: Address;\n}\n\nexport interface AcademicRecord {\n  id: number;\n  student: number;\n  subject: string;\n  grade: string;\n  score: number;\n  semester: string;\n  academic_year: string;\n  teacher_notes?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface StudentProject {\n  id: number;\n  student: number;\n  title: string;\n  description: string;\n  subject: string;\n  project_type: ProjectType;\n  status: ProjectStatus;\n  start_date: string;\n  due_date: string;\n  completion_date?: string;\n  grade?: string;\n  feedback?: string;\n  attachments: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport enum ProjectType {\n  RESEARCH = 'research',\n  PRESENTATION = 'presentation',\n  EXPERIMENT = 'experiment',\n  CREATIVE = 'creative',\n  TECHNICAL = 'technical'\n}\n\nexport enum ProjectStatus {\n  NOT_STARTED = 'not_started',\n  IN_PROGRESS = 'in_progress',\n  COMPLETED = 'completed',\n  OVERDUE = 'overdue'\n}\n\nexport interface LearningSession {\n  id: number;\n  student: number;\n  session_type: SessionType;\n  subject: string;\n  duration: number;\n  start_time: string;\n  end_time: string;\n  ai_teacher?: number;\n  materials_used: string[];\n  performance_score?: number;\n  engagement_level: EngagementLevel;\n  notes?: string;\n  created_at: string;\n}\n\nexport enum SessionType {\n  AI_LESSON = 'ai_lesson',\n  TRADITIONAL = 'traditional',\n  GROUP = 'group',\n  INDIVIDUAL = 'individual',\n  ASSESSMENT = 'assessment'\n}\n\nexport enum EngagementLevel {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  EXCELLENT = 'excellent'\n}\n\nexport interface StudentGoal {\n  id: number;\n  student: number;\n  title: string;\n  description: string;\n  goal_type: GoalType;\n  target_date: string;\n  status: GoalStatus;\n  progress: number;\n  milestones: GoalMilestone[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport enum GoalType {\n  ACADEMIC = 'academic',\n  BEHAVIORAL = 'behavioral',\n  SOCIAL = 'social',\n  PERSONAL = 'personal'\n}\n\nexport enum GoalStatus {\n  NOT_STARTED = 'not_started',\n  IN_PROGRESS = 'in_progress',\n  COMPLETED = 'completed',\n  OVERDUE = 'overdue'\n}\n\nexport interface GoalMilestone {\n  id: number;\n  title: string;\n  description: string;\n  target_date: string;\n  completed: boolean;\n  completion_date?: string;\n}\n\n// AI Teacher Types\nexport interface AILesson {\n  id: number;\n  title: string;\n  subject: string;\n  grade_level: number;\n  content: string;\n  learning_objectives: string[];\n  difficulty_level: DifficultyLevel;\n  estimated_duration: number;\n  ai_model_used: string;\n  created_by: number;\n  created_at: string;\n  updated_at: string;\n  tags: string[];\n  metadata: Record<string, any>;\n}\n\nexport enum DifficultyLevel {\n  BEGINNER = 'beginner',\n  INTERMEDIATE = 'intermediate',\n  ADVANCED = 'advanced',\n  EXPERT = 'expert'\n}\n\nexport interface AIConversation {\n  id: number;\n  student: number;\n  ai_teacher: number;\n  subject: string;\n  status: ConversationStatus;\n  start_time: string;\n  end_time?: string;\n  messages: ConversationMessage[];\n  summary?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport enum ConversationStatus {\n  ACTIVE = 'active',\n  PAUSED = 'paused',\n  COMPLETED = 'completed',\n  ARCHIVED = 'archived'\n}\n\nexport interface ConversationMessage {\n  id: number;\n  conversation: number;\n  sender_type: SenderType;\n  sender_id: number;\n  content: string;\n  message_type: MessageType;\n  timestamp: string;\n  metadata?: Record<string, any>;\n}\n\nexport enum SenderType {\n  STUDENT = 'student',\n  AI_TEACHER = 'ai_teacher',\n  HUMAN_TEACHER = 'human_teacher'\n}\n\nexport enum MessageType {\n  TEXT = 'text',\n  AUDIO = 'audio',\n  IMAGE = 'image',\n  VIDEO = 'video',\n  FILE = 'file'\n}\n\n// Analytics Types\nexport interface LearningAnalytics {\n  id: number;\n  student: number;\n  subject: string;\n  time_period: string;\n  metrics: AnalyticsMetrics;\n  insights: string[];\n  recommendations: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface AnalyticsMetrics {\n  total_study_time: number;\n  average_score: number;\n  completion_rate: number;\n  engagement_score: number;\n  improvement_rate: number;\n  attendance_rate: number;\n  participation_score: number;\n}\n\nexport interface PerformanceMetrics {\n  id: number;\n  student: number;\n  subject: string;\n  assessment_type: AssessmentType;\n  score: number;\n  max_score: number;\n  percentage: number;\n  grade: string;\n  feedback: string;\n  assessment_date: string;\n  created_at: string;\n}\n\nexport enum AssessmentType {\n  QUIZ = 'quiz',\n  TEST = 'test',\n  EXAM = 'exam',\n  PROJECT = 'project',\n  PRESENTATION = 'presentation',\n  ASSIGNMENT = 'assignment'\n}\n\n// Monitoring Types\nexport interface WebcamSession {\n  id: number;\n  student: number;\n  start_time: string;\n  end_time?: string;\n  status: SessionStatus;\n  privacy_settings: PrivacySettings;\n  frames_analyzed: number;\n  behavior_events: BehaviorEvent[];\n  created_at: string;\n}\n\nexport enum SessionStatus {\n  ACTIVE = 'active',\n  PAUSED = 'paused',\n  COMPLETED = 'completed',\n  ERROR = 'error'\n}\n\nexport interface PrivacySettings {\n  recording_enabled: boolean;\n  face_detection: boolean;\n  emotion_analysis: boolean;\n  behavior_tracking: boolean;\n  data_retention_days: number;\n  consent_given: boolean;\n  consent_date: string;\n}\n\nexport interface BehaviorEvent {\n  id: number;\n  session: number;\n  event_type: BehaviorEventType;\n  timestamp: string;\n  confidence: number;\n  description: string;\n  severity: AlertSeverity;\n  metadata: Record<string, any>;\n}\n\nexport enum BehaviorEventType {\n  ATTENTION_LOSS = 'attention_loss',\n  DISTRACTION = 'distraction',\n  FRUSTRATION = 'frustration',\n  ENGAGEMENT = 'engagement',\n  SLEEPINESS = 'sleepiness',\n  STRESS = 'stress'\n}\n\nexport enum AlertSeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical'\n}\n\n// Family Types\nexport interface Family {\n  id: number;\n  family_name: string;\n  primary_contact: User;\n  members: FamilyMember[];\n  students: FamilyStudent[];\n  communications: FamilyCommunication[];\n  notifications: FamilyNotification[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface FamilyMember {\n  id: number;\n  family: number;\n  user: User;\n  relationship: string;\n  is_primary_contact: boolean;\n  can_view_academic_records: boolean;\n  can_receive_notifications: boolean;\n  created_at: string;\n}\n\nexport interface FamilyStudent {\n  id: number;\n  family: number;\n  student: number;\n  relationship: string;\n  is_primary_guardian: boolean;\n  created_at: string;\n}\n\nexport interface FamilyCommunication {\n  id: number;\n  family: number;\n  type: string;\n  message: string;\n  sent_at: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface FamilyNotification {\n  id: number;\n  family: number;\n  title: string;\n  message: string;\n  read: boolean;\n  created_at: string;\n}\n\n// Staff Types\nexport interface Staff {\n  id: number;\n  user: User;\n  employee_id: string;\n  department: string;\n  position: string;\n  hire_date: string;\n  salary?: number;\n  supervisor?: number;\n  assignments: StaffAssignment[];\n  schedule: StaffSchedule[];\n  performance: StaffPerformance[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface StaffAssignment {\n  id: number;\n  staff: number;\n  assignment_type: AssignmentType;\n  subject?: string;\n  grade_level?: number;\n  start_date: string;\n  end_date?: string;\n  status: AssignmentStatus;\n  created_at: string;\n}\n\nexport enum AssignmentType {\n  TEACHING = 'teaching',\n  ADMINISTRATION = 'administration',\n  COUNSELING = 'counseling',\n  SUPPORT = 'support'\n}\n\nexport enum AssignmentStatus {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  PENDING = 'pending',\n  COMPLETED = 'completed'\n}\n\nexport interface StaffSchedule {\n  id: number;\n  staff: number;\n  day: string;\n  start_time: string;\n  end_time: string;\n}\n\nexport interface StaffPerformance {\n  id: number;\n  staff: number;\n  period: string;\n  rating: number;\n  notes?: string;\n}\n\n// Lesson Types\nexport interface Lesson {\n  id: number;\n  title: string;\n  subject: string;\n  grade_level: number;\n  description: string;\n  learning_objectives: string[];\n  content: string;\n  materials: LessonMaterial[];\n  assessments: LessonAssessment[];\n  created_by: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface LessonMaterial {\n  id: number;\n  lesson: number;\n  title: string;\n  material_type: MaterialType;\n  file_url: string;\n  description?: string;\n  created_at: string;\n}\n\nexport enum MaterialType {\n  DOCUMENT = 'document',\n  VIDEO = 'video',\n  AUDIO = 'audio',\n  IMAGE = 'image',\n  INTERACTIVE = 'interactive'\n}\n\nexport interface LessonAssessment {\n  id: number;\n  lesson: number;\n  title: string;\n  assessment_type: AssessmentType;\n  questions: AssessmentQuestion[];\n  total_points: number;\n  time_limit?: number;\n  created_at: string;\n}\n\nexport interface AssessmentQuestion {\n  id: number;\n  assessment: number;\n  question_text: string;\n  question_type: QuestionType;\n  options?: string[];\n  correct_answer?: string;\n  points: number;\n  created_at: string;\n}\n\nexport enum QuestionType {\n  MULTIPLE_CHOICE = 'multiple_choice',\n  TRUE_FALSE = 'true_false',\n  SHORT_ANSWER = 'short_answer',\n  ESSAY = 'essay',\n  MATCHING = 'matching'\n}\n\n// API Response Types\nexport interface ApiResponse<T> {\n  data: T;\n  message: string;\n  success: boolean;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse<T> {\n  results: T[];\n  count: number;\n  next?: string;\n  previous?: string;\n}\n\n// Dashboard Types\nexport interface DashboardData {\n  user: User;\n  quickStats: QuickStats;\n  recentActivity: ActivityItem[];\n  performanceData: PerformanceData;\n  notifications: Notification[];\n  upcomingEvents: Event[];\n}\n\nexport interface QuickStats {\n  totalStudents: number;\n  activeLessons: number;\n  aiSessions: number;\n  attendance: number;\n}\n\nexport interface ActivityItem {\n  id: number;\n  type: ActivityType;\n  title: string;\n  description: string;\n  timestamp: string;\n  user: User;\n  metadata?: Record<string, any>;\n}\n\nexport enum ActivityType {\n  LOGIN = 'login',\n  LESSON_COMPLETED = 'lesson_completed',\n  ASSESSMENT_TAKEN = 'assessment_taken',\n  PROJECT_SUBMITTED = 'project_submitted',\n  GOAL_ACHIEVED = 'goal_achieved',\n  BEHAVIOR_ALERT = 'behavior_alert'\n}\n\nexport interface PerformanceData {\n  labels: string[];\n  datasets: PerformanceDataset[];\n}\n\nexport interface PerformanceDataset {\n  label: string;\n  data: number[];\n  borderColor: string;\n  backgroundColor: string;\n}\n\nexport interface Notification {\n  id: number;\n  user: number;\n  title: string;\n  message: string;\n  type: NotificationType;\n  read: boolean;\n  created_at: string;\n  action_url?: string;\n}\n\nexport enum NotificationType {\n  INFO = 'info',\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  ERROR = 'error',\n  ALERT = 'alert'\n}\n\nexport interface Event {\n  id: number;\n  title: string;\n  description: string;\n  start_date: string;\n  end_date: string;\n  event_type: EventType;\n  location?: string;\n  attendees: number[];\n  created_at: string;\n}\n\nexport enum EventType {\n  CLASS = 'class',\n  MEETING = 'meeting',\n  EXAM = 'exam',\n  HOLIDAY = 'holiday',\n  ACTIVITY = 'activity'\n}\n\n// Real-time Communication Types\nexport interface ChatMessage {\n  id: string;\n  sender: User;\n  content: string;\n  message_type: MessageType;\n  timestamp: string;\n  read: boolean;\n  metadata?: Record<string, any>;\n}\n\nexport interface ChatRoom {\n  id: string;\n  name: string;\n  participants: User[];\n  messages: ChatMessage[];\n  last_message?: ChatMessage;\n  unread_count: number;\n  created_at: string;\n  updated_at: string;\n}\n\n// AI/ML Types\nexport interface AIModel {\n  id: string;\n  name: string;\n  type: ModelType;\n  version: string;\n  status: ModelStatus;\n  accuracy: number;\n  last_updated: string;\n  metadata: Record<string, any>;\n}\n\nexport enum ModelType {\n  PERFORMANCE_PREDICTION = 'performance_prediction',\n  EMOTION_RECOGNITION = 'emotion_recognition',\n  CONTENT_GENERATION = 'content_generation',\n  RISK_ASSESSMENT = 'risk_assessment',\n  ADAPTIVE_LEARNING = 'adaptive_learning'\n}\n\nexport enum ModelStatus {\n  TRAINING = 'training',\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  ERROR = 'error'\n}\n\nexport interface PredictionResult {\n  model_id: string;\n  prediction: any;\n  confidence: number;\n  timestamp: string;\n  metadata: Record<string, any>;\n}\n\n// Error Types\nexport interface ApiError {\n  message: string;\n  code: string;\n  details?: Record<string, any>;\n  timestamp: string;\n}\n\n// Form Types\nexport interface FormField {\n  name: string;\n  label: string;\n  type: 'text' | 'email' | 'password' | 'number' | 'select' | 'textarea' | 'checkbox' | 'radio' | 'date' | 'file';\n  required: boolean;\n  options?: { value: string; label: string }[];\n  validation?: {\n    min?: number;\n    max?: number;\n    pattern?: string;\n    message?: string;\n  };\n}\n\nexport interface FormData {\n  [key: string]: any;\n}\n\n// UI Types\nexport interface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  children: React.ReactNode;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport interface LoadingState {\n  isLoading: boolean;\n  error: string | null;\n  data: any;\n}\n\nexport interface PaginationState {\n  page: number;\n  pageSize: number;\n  total: number;\n  totalPages: number;\n}\n\n// WebSocket Types\nexport interface WebSocketMessage {\n  type: string;\n  data: any;\n  timestamp: string;\n  user_id?: number;\n}\n\nexport interface RealTimeUpdate {\n  type: 'student_activity' | 'behavior_alert' | 'performance_update' | 'notification';\n  data: any;\n  timestamp: string;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}