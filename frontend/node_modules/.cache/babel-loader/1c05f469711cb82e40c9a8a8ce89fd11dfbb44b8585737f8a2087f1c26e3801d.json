{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuthStore}from'../../store';import LoadingSpinner from'../UI/LoadingSpinner';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated,isLoading}=useAuthStore();const location=useLocation();if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsx(LoadingSpinner,{size:\"large\",text:\"Checking authentication...\"})});}if(!isAuthenticated){// Redirect to login page with the return url\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuthStore","LoadingSpinner","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","isAuthenticated","isLoading","location","className","size","text","to","state","from","replace"],"sources":["/workspaces/ai-school/frontend/src/components/Auth/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuthStore } from '../../store';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const { isAuthenticated, isLoading } = useAuthStore();\n  const location = useLocation();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <LoadingSpinner size=\"large\" text=\"Checking authentication...\" />\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    // Redirect to login page with the return url\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,YAAY,KAAQ,aAAa,CAC1C,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAMlD,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjE,KAAM,CAAEE,eAAe,CAAEC,SAAU,CAAC,CAAGV,YAAY,CAAC,CAAC,CACrD,KAAM,CAAAW,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,GAAIW,SAAS,CAAE,CACb,mBACEP,IAAA,QAAKS,SAAS,CAAC,0DAA0D,CAAAJ,QAAA,cACvEL,IAAA,CAACF,cAAc,EAACY,IAAI,CAAC,OAAO,CAACC,IAAI,CAAC,4BAA4B,CAAE,CAAC,CAC9D,CAAC,CAEV,CAEA,GAAI,CAACL,eAAe,CAAE,CACpB;AACA,mBAAON,IAAA,CAACL,QAAQ,EAACiB,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEN,QAAS,CAAE,CAACO,OAAO,MAAE,CAAC,CACpE,CAEA,mBAAOf,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}